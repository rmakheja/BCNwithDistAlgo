import sys
r = import_da("Replica")

class config():
    history = []
    quorom = []

class Olympus(process):

    def setup(client: Client, config: set):

        self.oly_private_key = 'oly_priv_key_VALUE'
        self.oly_public_key = 'oly_pub_key_VALUE'
        self.replica_public_keys = []
        self.replica_private_keys = []
        self.client_public_key = 'client_pub_key_VALUE'
        self.client_private_key = 'client_priv_key_VALUE'
        self.caughtupMessageHash = 'some_caughtUpMsg_VALUE'

        ## Create replica processes here
        no_replicas = config["num_replicas"]
        replica_set = new(r.Replica, num=no_replicas, at="ReplicaNode@127.0.0.1")
        list_replica = list(replica_set)
        print('Type of replica_set variable - ' + str(type(replica_set)) )
        for r_s in list_replica:
            print(r_s)
        setup(list_replica, (self, client, list_replica, config))
        start(list_replica)
        self.replica_list = list_replica

        ## Olympus terminating flag
        self.terminate = False

    def receive(msg=('current_configuration'), from_= client1):
        output('Received request from Client for current configuration')

        client_config = {}
        client_config["oly_public_key"] = self.oly_public_key
        client_config["replica_public_keys"] = self.replica_public_keys
        client_config["client_public_key"] = self.client_public_key
        client_config["client_private_key"] = self.client_private_key
        client_config["head_replica"] = self.replica_list[0]
        client_config["tail_replica"] = self.replica_list[len(replica_list)-1]

        # print(config)
        output("Client timeout received from system.conf is - " + str(config['client_timeout']))
        client_config["client_timeout"] = config['client_timeout']

        send(('cur_conf', client_config), to= client1)
        # terminate = True

    def receive(msg=('reconfigure'), from_= client):
        output('Received reconfiguration request from Client')
        terminate = True

    def run():
        output('Started Olympus...Initializing variables')
        ## use pynacl lib to initiailze all keys
        output('Waiting for an operations...')
        await(terminate)