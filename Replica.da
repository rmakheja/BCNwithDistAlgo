import sys

class Replica(process):
    def setup(olympus: Olympus, client: Client, list_replicas: list, config: set):
        self.terminate = False

    def receive(msg=('execute', command, replica_index), from_= client1):
        output('Received request from Client for task execution ', command)
        print('Replica i received - ', replica_index)
        ind = int(replica_index)
        if command['seqNo'] == '1':
            print('not sending response for 2nd request');
        elif(ind == (len(list_replicas) - 1)):
            result = {'seqNo' : command['seqNo'], 'res' : 'result for ' + command['oper']}
            send(('execution_success', result), to= client)
            #print('not sending res to client')
        else:
            ind += 1
            send(('execute', command, str(ind)), to= list_replicas[ind])

    def receive(msg=('retrans', command, replica_index), from_= client1):
        print('sent')
        result = {'seqNo' : command['seqNo'], 'res' : 'result for ' + command['oper']}
        send(('retrans_res', result), to= client)

    def run():
        output('Started Replica...waiting for an operations...')
        await(terminate)