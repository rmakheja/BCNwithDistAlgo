# Test case name
test_case_name = different_keys_for_each_client

# Number of failures. Total replicas is 2t+1
t = 1

# Number of clients
num_clients = 4

# client timeout, in milliseconds.  if timer expires, resend request
# to all replicas, as described in section 3.3.
client_timeout = 3000

# timeout, in milliseconds, for head and non-head servers, respectively:
# if timer expires, send reconfiguration request to Olympus, as described
# in section 3.3.
head_timeout = 3000
nonhead_timeout = 3000

# MAPPING OF PROCESSES TO HOSTS
# to simplify changing the hosts, we first specify a semicolon-separated
# list of hosts, and then use 0-based indices into that list to specify the
# host on which each process runs.
# list of hosts used in this scenario
#hosts = 10.142.0.2; 10.142.0.3; 10.142.0.4; 10.142.0.5
hosts = 127.0.0.1; 127.0.0.2; 127.0.0.3; 127.0.0.4

# host on which each client runs.  in this example, client 0 runs
# on host 1, clients 1 and 2 run on host 0.
client_hosts = 0; 0; 0; 0

# host on which each replica runs.  same in all configurations.
replica_hosts = 0; 0; 0

# Olympus host
olympus_host = 0

# CLIENT WORKLOAD
workload[0] = put('movie','star'); append('movie',' wars'); slice('movie','5:9'); get('planet')
workload[1] = put('planet','earth'); append('planet',' mercury'); put('movie','trek'); slice('movie','5:9'); get('movie')
workload[2] = pseudorandom(233,3)
workload[3] = put('class','async'); append('class','chronous systems'); slice('planet','0:5'); slice('class','0:5')

# FAILURE SCENARIO : no failures

